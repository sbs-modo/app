{"version":3,"sources":["components/AllTime.tsx","components/ContactInfo.tsx","components/Games.tsx","components/PageHeader.tsx","components/Players.tsx","components/Records.tsx","App.js","reportWebVitals.js","index.js"],"names":["AllTime","id","className","width","title","allTime","roster","map","player","rank","name","goals","assists","points","penalties","ContactInfo","style","textAlign","Games","paddingLeft","paddingRight","paddingBottom","allEvents","event","href","cursor","padding","serie","games","length","game","result","game_id","homeTeam","awayTeam","homeGoals","awayGoals","finishedTypeString","date","fontSize","background","player_stats","stats","desc","PageHeader","src","process","alt","type","height","float","Players","getPlayerRow","playerID","jersey","firstName","lastName","dateOfBirth","role","hand","events","saves","goalsAgainst","String","substr","against","allPlayers","filter","some","Records","TOP_LIST_SIZE","mostPoints","sort","a","b","slice","mostGoals","mostAssists","seasonStats","forEach","playerSeason","push","seasonName","seasonMostPoints","seasonMostGoals","seasonMostAssists","gameStats","playerGameStats","gameMostPoints","gameMostGoals","gameMostAssists","getRecordTable","items","header","field","header2","field2","border","marginTop","minWidth","index","marginLeft","marginRight","display","flexWrap","flexDirection","justifyContent","router","createHashRouter","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c3e6845c.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport allTime from '../data/all_time_stats.json';\n\nconst AllTime: FC = () => {\n\n    //const classes = useStyles();\n\n    return (\n        <>\n            <table id=\"allTimeStats\" className=\"table table-striped table-bordered\" width=\"100%\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Nimi</th>\n                        <th>Maalit</th>\n                        <th>Syötöt</th>\n                        <th>Pisteet</th>\n                        <th title=\"Mukana vain 2. divari jäähyt\"> Jäähyt (min)</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {allTime.roster.map((player: any) => {\n                        return (\n                            <tr>\n                                <td>{player.rank}</td>\n                                <td>{player.name}</td>\n                                <td>{player.goals}</td>\n                                <td>{player.assists}</td>\n                                <td>{player.points}</td>\n                                <td>{player.penalties}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </>\n    );\n};\nexport default AllTime;","import React, { FC } from \"react\";\n\nconst ContactInfo: FC = () => {\n    return (\n        <div style={{textAlign: \"center\"}} className=\"div\">\n            <h3>Joukkueenjohtaja:</h3>\n            <p>Pasi Willberg</p>\n        </div>\n    );\n};\nexport default ContactInfo;","import React, { FC } from \"react\";\n\nimport allEvents from '../data/all_games.json';\n\nconst Games: FC = () => {\n    return (\n        <>\n            <div style={{paddingLeft: \"6%\", paddingRight: \"6%\", paddingBottom: \"10%;\"}}>\n                {allEvents.map(event => {\n                    return (\n                        <div className=\"col xs-12\">\n                            <a href={\"#event_details_\" + event.name} data-toggle=\"collapse\" title=\"Pelaajan tapahtumat\" style={{cursor: \"pointer\", padding: \"0px\"}} className=\"h4\">\n                                {event.name} - {event.serie}\n                            </a>\n                            <div id={\"event_details_\" + event.name} className={event.name === \"2023-2024\" ? \"collapse in\" : \"collapse out\"}>\n                                <div className=\"list-group\">\n                                    {event.games && event.games.length > 0 ? \n                                    event.games.map(game => \n                                        (<div className={\"list-group-item \" + (game.result === 0 ? \"lostGame\" : (game.result === 1 ? \"wonGame\": \"otGame\"))}>\n                                            <div className=\"row\" data-target={\"#event_details_\" +game.game_id} data-toggle=\"collapse\" title=\"Kauden tilastot\" style={{cursor: \"pointer\", paddingLeft: \"2%\"}}>\n                                                <div className=\"col-xs-6\">{game.homeTeam} - {game.awayTeam}</div>\n                                                <div className=\"col-xs-3\">{game.homeGoals} - {game.awayGoals} {game.finishedTypeString}</div>\n                                                <div className=\"col-xs-3\">{game.date}</div>\n                                            </div>\n                                            <div id={\"event_details_\" + game.game_id} className=\"collapse out\">\n                                                <table style={{width: \"100%\", paddingLeft: \"2%\", fontSize: \"12px\"}}>\n                                                    <thead style={{background: \"lightgrey\"}}>\n                                                        <tr>\n                                                            <th>Nimi</th> \n                                                            <th>Maalit</th> \n                                                            <th>Syötöt</th> \n                                                            <th>Pisteet</th>  \n                                                        </tr>\n                                                    </thead>\n                                                    <tbody style={{background: \"white\"}}>\n                                                    {game.player_stats && game.player_stats.map(stats =>(\n                                                        <tr>\n                                                            <td>{stats.name}</td>\n                                                            <td>{stats.goals}</td>\n                                                            <td>{stats.assists}</td>\n                                                            <td>{stats.points}</td>\n                                                        </tr>\n                                                    ))}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>))\n                                    :\n                                    <div className=\"list-group-item\">\n                                        {event.desc}\n                                    </div>}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n\n        </>\n    );\n};\nexport default Games;","import React, { FC } from \"react\";\n//import TeamImage from \"modo_team.jpg\"\n\nconst PageHeader: FC = () => {\n\n    //const classes = useStyles();\n\n    return (\n        <>\n            <div id=\"header-image\" className=\"div\"><img src={process.env.PUBLIC_URL +\"/modo_team.jpg\"} alt=\"logo\" className=\"img-responsive center-block\"/></div>\n            <nav className=\"navbar navbar-inverse navbar-relative-top\">\n            <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                    <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navi\" aria-expanded=\"false\" className=\"navbar-toggle collapsed\">\n                        <span className=\"icon-bar\"></span>\n                        <span className=\"icon-bar\"></span>\n                        <span className=\"icon-bar\"></span>\n                    </button>\n                    <a href=\"#/\" className=\"navbar-brand\">\n                        <img src={process.env.PUBLIC_URL + \"/modo_logo.jpg\"} alt=\"logo\" width=\"22\" height=\"22\" style={{float: \"left\"}}/>\n                        <span style={{float: \"left\"}}>&nbsp;SBS MODO</span>\n                    </a>\n                </div>\n                <div id=\"navi\" className=\"collapse navbar-collapse\">\n                <ul className=\"nav navbar-nav navbar-left\">\n                    <li><a href=\"#/joukkue\" className=\"sm-pull-right\">Joukkue</a></li>\n                    <li><a href=\"#/pelit\" className=\"sm-pull-right\">Ottelut</a></li>\n                    <li><a href=\"#/alltime\" className=\"sm-pull-right\"> All time</a></li>\n                    <li><a href=\"#/records\" className=\"sm-pull-right\"> Ennätykset</a></li>\n                    <li><a href=\"#/yhteystiedot\" className=\"sm-pull-right\">Yhteystiedot</a></li>\n                </ul>\n                </div>\n            </div>\n            </nav>\n        </>\n    );\n};\nexport default PageHeader;","import React, { FC } from \"react\";\nimport allPlayers from '../data/player_stats.json';\n\nconst Players: FC = () => {\n\n    //const classes = useStyles();\n\n    const getPlayerRow = (player: any) => {\n        return (\n            <div className=\"col xs-12\">\n                    <a className=\"h4\" href={\"#playerdetails_\" + player.playerID} data-toggle=\"collapse\" title=\"Pelaajan tapahtumat\" style={{cursor: 'pointer', padding: '2px'}}>\n                        {player.jersey} {player.firstName} {player.lastName}\n                    </a>\n                    <div className=\"collapse\" id={\"playerdetails_\" + player.playerID}>\n                    <div className=\"list-group\">\n                        <div className=\"div\" style={{padding: '5px'}}>Syntymäaika: {player.dateOfBirth}</div>\n                        <div className=\"div\" style={{padding: '5px'}}>Pelipaikka: {player.role}</div>\n                        <div className=\"div\" style={{padding: '5px'}}>Kätisyys: {player.hand}</div>\n                        {player.events.map((event: any) => {\n                            return (\n                                <div className=\"list-group-item\">\n                                    <a className=\"h5\" href={\"#playerdetails_\" + player.playerID+ event.name} data-toggle=\"collapse\" title=\"Kauden tilastot\" style={{cursor: 'pointer', paddingLeft: '2%'}}>\n                                        {player.role === \"MV\" && event.saves > 0 ?\n                                            (<span> {event.name} : \n                                            <b>GA</b> \n                                            <span>{event.goalsAgainst}</span>\n                                            <b> S</b>  \n                                            <span>{event.saves}</span>\n                                            <b> S%</b> :\n                                            <span>{String((event.saves / (event.goalsAgainst + event.saves))*100).substr(0,5)}</span></span>)\n                                        :\n                                            <span> {event.name} : {event.goals} + {event.assists} = {event.points}</span>\n                                        }\n                                    </a>\n                                    <div className=\"collapse\" id={\"playerdetails_\" + player.playerID+ event.name}>\n                                        <table width=\"100%\" style={{paddingLeft: '2%', fontSize: '12px'}}>\n                                            <thead style={{background: 'lightgrey'}}>\n                                                <tr>\n                                                    {player.role === \"MV\" && event.saves > 0?\n                                                    <>\n                                                        <th>Päästetyt maalit</th>\n                                                        <th>Torjunnat</th>\n                                                        <th>Torjunta-% </th>\n                                                    </> : \n                                                    <>\n                                                        <th>Maalit</th>\n                                                        <th>Syötöt</th>\n                                                        <th>Pisteet</th>\n                                                    </>}\n                                                    <th>Vastustaja</th>\n                                                    <th>Päivämäärä</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                            {event.games &&\n                                            (<>\n                                                {event.games.map((game: any) => {\n                                                    return (\n                                                        <tr>\n                                                            {player.role === \"MV\" && event.saves > 0 ?\n                                                            <>\n                                                                <td>{game.goalsAgainst}</td>\n                                                                <td>{game.saves}</td>\n                                                                {game.saves > 0 ?\n                                                                <td>{String((game.saves / (game.goalsAgainst + game.saves))*100).substr(0,5)}</td>\n                                                                :\n                                                                <td>0</td>}\n                                                            </>\n\n                                                            :\n                                                            <>\n                                                                <td>{game.goals}</td>\n                                                                <td>{game.assists}</td>\n                                                                <td>{game.points}</td>\n                                                            </>\n                                                            }\n                                                            <td>{game.against}</td>\n                                                            <td>{game.date}</td>\n                                                        </tr>\n                                                    )}\n                                                )}\n                                            </>)}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            )})}\n                    </div>\n                    </div>\n                </div>\n        )\n    }\n\n    return (\n        <>\n            <div className=\"div\" style={{paddingLeft: '6%', paddingRight: '6%', paddingBottom: '10%'}}>\n            {allPlayers.filter(player => player.events.some(event => event.name === '2023-2024')).map(player => {\n                return getPlayerRow(player);\n            })}\n            <h3>Hall of Fame</h3>\n            {allPlayers.filter(player => !player.events.some(event => event.name === '2023-2024')).map(player => {\n                return getPlayerRow(player);\n            })}\n            </div>\n        </>\n    );\n};\nexport default Players;","import React, { FC } from \"react\";\nimport allPlayers from '../data/player_stats.json';\nimport allTime from '../data/all_time_stats.json';\n\nconst Records: FC = () => {\n\n    const TOP_LIST_SIZE = 10;\n    const mostPoints = allTime.roster.sort((a, b) => (a.points > b.points ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    const mostGoals = allTime.roster.sort((a, b) => (a.goals > b.goals ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    const mostAssists = allTime.roster.sort((a, b) => (a.assists > b.assists ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n\n    allTime.roster.sort((a, b) => (a.points > b.points ? -1 : 1)) // sort by points so that records pages still in correct order..\n\n    const seasonStats: any[] = [];\n    allPlayers.map(player => player.events.forEach(playerSeason => seasonStats.push(\n        {\n            name: player.firstName + ' ' + player.lastName, \n            seasonName: playerSeason.name,\n            points: playerSeason.points,\n            assists: playerSeason.assists,\n            goals: playerSeason.goals,\n        } as any\n    )))\n\n    const seasonMostPoints = seasonStats.sort((a, b) => (a.points > b.points ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    const seasonMostGoals = seasonStats.sort((a, b) => (a.goals > b.goals ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    const seasonMostAssists = seasonStats.sort((a, b) => (a.assists > b.assists ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    // TODO: calculate longest point streaks per season\n    //const seasonLongestPointStreak = undefined;\n\n    const gameStats: any[] = [];\n    //@ts-ignore\n    allPlayers.map(player => player.events.forEach(playerSeason => playerSeason.games?.forEach(playerGameStats => gameStats.push(\n        {\n            name: player.firstName + ' ' + player.lastName, \n            seasonName: playerSeason.name,\n            points: playerGameStats.points,\n            assists: playerGameStats.assists,\n            goals: playerGameStats.goals,\n        } as any\n    ))))\n\n    const gameMostPoints = gameStats.sort((a, b) => (a.points > b.points ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    const gameMostGoals = gameStats.sort((a, b) => (a.goals > b.goals ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n    const gameMostAssists = gameStats.sort((a, b) => (a.assists > b.assists ? -1 : 1)).slice(0,TOP_LIST_SIZE);\n\n    const getRecordTable = (items: any, header: string, field: string, header2?: string, field2?: string) => {\n        return (\n            <table style={{fontSize: '12px', border: '0.5px solid black', marginTop: '10px', width:'100%', minWidth:'300px'}}>\n                <thead style={{background: 'lightgrey'}}>\n                    <tr>\n                        <th style={{width:\"30%\"}}>{header}</th>\n                        <th>Nimi</th>\n                        {header2 && <th>{header2}</th>}\n                    </tr>\n                </thead>\n                <tbody>\n                {items.map((player: any, index: number) => (\n                    <tr>\n                        <td>{player[field]}</td>\n                        <td>{player.name}</td>\n                        {field2 && <td>{player[field2]}</td>}\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        )\n    }\n\n    return (\n        <div style={{marginLeft: '10px',marginRight: '10px'}}>\n            <div style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'row', justifyContent: 'space-around'}}>\n                <div style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'column'}}>\n                    <h5>All time</h5>\n                    {getRecordTable(mostPoints, \"Pisteet\", \"points\")}\n                    {getRecordTable(mostGoals, \"Maalit\", \"goals\")}\n                    {getRecordTable(mostAssists, \"Syötöt\", \"assists\")}\n                </div>\n                <div style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'column'}}>\n                    <h5>Yhden kauden ennätykset</h5>\n                    {getRecordTable(seasonMostPoints, \"Pisteet\", \"points\", \"Kausi\", \"seasonName\")}\n                    {getRecordTable(seasonMostGoals, \"Maalit\", \"goals\", \"Kausi\", \"seasonName\")}\n                    {getRecordTable(seasonMostAssists, \"Syötöt\", \"assists\", \"Kausi\", \"seasonName\")}\n                </div>\n                <div style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'column'}}>\n                    <h5>Yhden pelin ennätykset</h5>\n                    {getRecordTable(gameMostPoints, \"Pisteet\", \"points\", \"Kausi\", \"seasonName\")}\n                    {getRecordTable(gameMostGoals, \"Maalit\", \"goals\", \"Kausi\", \"seasonName\")}\n                    {getRecordTable(gameMostAssists, \"Syötöt\", \"assists\", \"Kausi\", \"seasonName\")}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Records;","import React from \"react\";\nimport {\n  createHashRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport AllTime from \"./components/AllTime\";\nimport ContactInfo from \"./components/ContactInfo\";\nimport Games from \"./components/Games\";\nimport PageHeader from \"./components/PageHeader\";\nimport Players from \"./components/Players\";\nimport Records from \"./components/Records\";\n\nconst router = createHashRouter([\n  {\n    path: \"/\",\n    element: <Games />,\n  },\n  {\n    path: \"/pelit\",\n    element: <Games />,\n  },\n  {\n    path: \"/joukkue\",\n    element: <Players />,\n  },\n  {\n    path: \"/alltime\",\n    element: <AllTime />,\n  },\n  {\n    path: \"/records\",\n    element: <Records />,\n  },\n  {\n    path: \"/yhteystiedot\",\n    element: <ContactInfo />\n  }\n]);\n\nexport default function App() {\n  return (\n    <>\n      <PageHeader />\n      <RouterProvider router={router} />\n    </>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}